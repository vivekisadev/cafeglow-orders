<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CaféFlow - Table <%= tableNum %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #ff6b00;
            --primary-dark: #e55d00;
            --bg: #121212;
            --card: #1c110a;
            --text: #e5c07b;
            --border: #3a2b1a;
        }
        body { 
            background: var(--bg); 
            color: var(--text); 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .card { 
            background: var(--card); 
            border: 1px solid var(--border); 
            border-radius: 0.75rem;
            transition: all 0.3s ease;
        }
        .card:hover {
            border-color: var(--primary);
            box-shadow: 0 8px 25px rgba(255, 107, 0, 0.15);
        }
        .btn-primary { 
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 0, 0.3);
        }
        .cart-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: var(--primary);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            font-weight: bold;
        }
        .menu-item {
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .menu-item:hover {
            transform: translateY(-5px);
        }
        .category-btn {
            transition: all 0.3s ease;
            border: 1px solid var(--border);
        }
        .category-btn:hover,
        .category-btn.active {
            background: var(--primary);
            border-color: var(--primary);
        }
        .search-input {
            background: var(--card);
            border: 1px solid var(--border);
            color: var(--text);
            transition: all 0.3s ease;
        }
        .search-input:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(255, 107, 0, 0.1);
            outline: none;
        }
        .modal {
            backdrop-filter: blur(8px);
        }
        .cart-item {
            transition: all 0.3s ease;
        }
        .cart-item:hover {
            background: rgba(255, 107, 0, 0.1);
        }
        /* Responsive adjustments */
        @media (max-width: 640px) {
            .menu-grid {
                grid-template-columns: 1fr;
            }
            .category-btn {
                font-size: 0.875rem;
                padding: 0.5rem 0.75rem;
            }
        }
        @media (min-width: 641px) and (max-width: 1024px) {
            .menu-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
        @media (min-width: 1025px) {
            .menu-grid {
                grid-template-columns: repeat(3, 1fr);
            }
        }
    </style>
  </head>
  <body class="min-h-screen">
    
    <script
      defer
      src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"
    ></script>

    <div class="TableNumber text-['#2a1b0a'] lg:text-5xl text-2xl font-bold flex items-center justify-center absolute lg:right-20 right-5 lg:top-[20%] rounded-full bg-[#ff6b00] lg:w-20 w-10 lg:h-20 h-10 top-[11%]"><%= tableNum %></div>
  


    <header class="sticky top-0 z-50 bg-gradient-to-r from-[#1c110a] to-[#2a1b0a] border-b border-[#3a2b1a]">
      <div class="container mx-auto px-4 py-4 flex items-center justify-between">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gradient-to-br from-[#ff6b00] to-[#e55d00] rounded-full flex items-center justify-center">
            <i class="fas fa-coffee text-white text-lg"></i>
          </div>
          <div>
            <h1 class="text-xl font-bold text-[#e5c07b]">CaféFlow</h1>
            <p class="text-sm text-gray-400">Table <%= tableNum %></p>
          </div>
        </div>
        
        <button id="cartBtn" class="relative bg-gradient-to-r from-[#ff6b00] to-[#e55d00] text-white px-4 py-2 rounded-lg flex items-center space-x-2 hover:from-[#e55d00] hover:to-[#d44d00] transition-all">
          <i class="fas fa-shopping-cart"></i>
          <span>Cart</span>
          <span id="cartCount" class="cart-badge">0</span>
        </button>
      </div>
    </header>



    <main class="container mx-auto px-4 py-8">
      <!-- Search Bar -->
      <div class="mb-8">
        <div class="max-w-md mx-auto relative">
          <input type="text" id="searchInput" placeholder="Search menu items..." 
                 class="search-input w-full pl-10 pr-4 py-3 rounded-lg">
          <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
        </div>
      </div>

      <!-- Categories -->
      <div class="mb-8">
        <div class="flex flex-wrap justify-center gap-3" id="categories">
          <button class="category-btn active px-4 py-2 rounded-lg text-sm font-medium" data-category="all">
            All Items
          </button>
          <button class="category-btn px-4 py-2 rounded-lg text-sm font-medium" data-category="coffee">
            <i class="fas fa-coffee mr-1"></i>Coffee
          </button>
          <button class="category-btn px-4 py-2 rounded-lg text-sm font-medium" data-category="tea">
            <i class="fas fa-leaf mr-1"></i>Tea
          </button>
          <button class="category-btn px-4 py-2 rounded-lg text-sm font-medium" data-category="food">
            <i class="fas fa-utensils mr-1"></i>Food
          </button>
          <button class="category-btn px-4 py-2 rounded-lg text-sm font-medium" data-category="desserts">
            <i class="fas fa-cookie-bite mr-1"></i>Desserts
          </button>
          <button class="category-btn px-4 py-2 rounded-lg text-sm font-medium" data-category="beverages">
            <i class="fas fa-glass-whiskey mr-1"></i>Beverages
          </button>
        </div>
      </div>

      <!-- Menu Grid -->
      <div id="menuGrid" class="menu-grid grid gap-6">
        <!-- Menu items will be populated here -->
      </div>

      <div id="emptyMessage" class="text-center py-12 hidden">
        <i class="fas fa-coffee text-4xl text-gray-600 mb-4"></i>
        <h3 class="text-xl font-semibold text-gray-400 mb-2">Menu is empty</h3>
        <p class="text-gray-500">No items available at the moment. Please check back later.</p>
      </div>
    </main>

    <!-- Cart Modal -->
    <div id="cartModal" class="modal fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
      <div class="card max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
          <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-bold text-[#e5c07b]">Your Order</h2>
            <button id="closeCartBtn" class="text-gray-400 hover:text-white">
              <i class="fas fa-times text-xl"></i>
            </button>
          </div>
          
          <div id="cartItems" class="space-y-3 mb-6 max-h-64 overflow-y-auto">
            <!-- Cart items will be populated here -->
          </div>
          
          <div class="border-t border-[#3a2b1a] pt-4 mb-6">
            <div class="flex justify-between items-center text-lg font-bold">
              <span>Total:</span>
              <span id="cartTotal" class="text-[#ff6b00]">₹0</span>
            </div>
          </div>
          
          <div class="space-y-3">
            <button id="placeOrderBtn" class="btn-primary w-full py-3 rounded-lg font-medium">
              <i class="fas fa-check mr-2"></i>Place Order
            </button>
            <button id="continueShoppingBtn" class="w-full py-3 rounded-lg font-medium border border-[#3a2b1a] text-gray-400 hover:bg-[#3a2b1a] transition-all">
              Continue Shopping
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Success Modal -->
    <div id="successModal" class="modal fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
      <div class="card max-w-sm w-full text-center p-8">
        <div class="w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-check text-white text-2xl"></i>
        </div>
        <h2 class="text-xl font-bold text-[#e5c07b] mb-2">Order Placed Successfully!</h2>
        <p class="text-gray-400 mb-6">Your order has been sent to the kitchen. Please wait while we prepare your items.</p>
        <button id="closeSuccessBtn" class="btn-primary w-full py-3 rounded-lg font-medium">
          Continue Shopping
        </button>
      </div>
    </main>



    <!-- Modal for Item Details -->
    <div id="item-modal" class="modal">
      <div class="modal-content">
        <h2 id="modal-name"></h2>
        <img id="modal-image" width="max" height="200px" />
        <p id="modal-description"></p>
        <p>Price: ₹<span id="modal-base-price"></span></p>
        <label>Size:</label>
        <select id="modal-size">
          <option value="0">Single (+₹0)</option>
          <option value="1.50">Double (+₹15.00)</option></select
        ><br />
        <label>Extra:</label>
        <select id="modal-extra">
          <option value="0">None (+₹0)</option>
          <option value="1.00">Extra Shot (+₹40.00)</option></select
        ><br />
        <label>Quantity:</label>
        <input type="number" name="quantity" id="modal-quantity" value="1" min="1" /><br />
        <button class="add-to-cart" onclick="addToCartFromModal()">
          Add to Cart
        </button>
        <button onclick="closeModal()">Close</button>
      </div>
    </div>

    <!-- Modal for Add/Edit Item -->
    <div id="edit-modal" class="modal">
      <div class="modal-content">
        <h2 id="edit-title">Add New Item</h2>
        <input id="edit-name" placeholder="Name" />
        <input id="edit-category" placeholder="Category" />
        <input id="edit-price" type="number" placeholder="Price" />
        <input id="edit-description" placeholder="Description" />
        <input id="edit-image" placeholder="Image URL" />
        <button class="add-to-cart" onclick="saveItem()">Save</button>
        <button onclick="closeEditModal()">Close</button>
      </div>
    </div>

    <!-- Footer -->
    <footer>
      <div class="footer-content">
        <div class="footer-logo">
          <img
            src="https://placehold.co/40x40/orange/white?text=C"
            alt="CaféFlow Logo"
          />
          <span>CaféFlow</span>
        </div>
        <p class="tagline">Brewing happiness, one cup at a time ☕</p>
        <nav class="footer-nav">
          <a href="/table/<%= tableNum %>">Menu</a>
          <a href="/admin/dashboard">Admin Dashboard</a>
          <a href="#">Contact</a>
        </nav>
        <p class="copy">&copy; 2025 CaféFlow. All rights reserved.</p>
        <p class="copy">A product of Mahirag</p>
      </div>
    </footer>

    <script>
      // ---------- Modern Cart Functions ----------

      let cart = [];
      let currentItem = null;
      const taxRate = 0.08;

      // Load cart from localStorage for table-specific storage
      function loadCart() {
        const savedCart = localStorage.getItem(`cart_table_<%= tableNum %>`);
        cart = savedCart ? JSON.parse(savedCart) : [];
        updateCartBadge();
      }

      // Save cart to localStorage
      function saveCart() {
        localStorage.setItem(`cart_table_<%= tableNum %>`, JSON.stringify(cart));
      }

      // Update cart badge
      function updateCartBadge() {
        const badge = document.querySelector('.cart-badge');
        if (badge) badge.dataset.count = cart.length;
      }

      // Initialize cart on page load
      document.addEventListener('DOMContentLoaded', function() {
        loadCart();
      });

      // ---------- Menu ----------
      // Add to cart function
      function addToCart(productId, name, price, image) {
        const existingItem = cart.find(item => item.productId === productId);
        
        if (existingItem) {
          existingItem.quantity += 1;
        } else {
          cart.push({
            productId: productId,
            name: name,
            price: price,
            image: image,
            quantity: 1
          });
        }
        
        saveCart();
        updateCartBadge();
        
        // Show feedback
        const button = event.target;
        const originalText = button.textContent;
        button.textContent = 'Added!';
        button.style.backgroundColor = '#10b981';
        setTimeout(() => {
          button.textContent = originalText;
          button.style.backgroundColor = '';
        }, 1000);
      }

      // Remove from cart function
      function removeFromCart(index) {
        cart.splice(index, 1);
        saveCart();
        updateCartBadge();
        renderCart();
      }

      // Render cart function
      function renderCart() {
        const cartModal = document.getElementById('cart-modal');
        const cartItems = document.getElementById('cart-items');
        const cartTotal = document.getElementById('cart-total');
        
        if (!cartItems) return;
        
        cartItems.innerHTML = '';
        let total = 0;
        
        if (cart.length === 0) {
          cartItems.innerHTML = '<p class="text-gray-400 text-center py-8">Your cart is empty</p>';
        } else {
          cart.forEach((item, index) => {
            const itemTotal = item.price * item.quantity;
            total += itemTotal;
            
            cartItems.innerHTML += `
              <div class="flex items-center justify-between p-4 border-b border-gray-700">
                <div class="flex items-center space-x-3">
                  <img src="${item.image}" alt="${item.name}" class="w-12 h-12 object-cover rounded">
                  <div>
                    <h4 class="font-medium text-white">${item.name}</h4>
                    <p class="text-sm text-gray-400">₹${item.price.toFixed(2)} x ${item.quantity}</p>
                  </div>
                </div>
                <div class="flex items-center space-x-3">
                  <span class="font-medium text-white">₹${itemTotal.toFixed(2)}</span>
                  <button onclick="removeFromCart(${index})" class="text-red-400 hover:text-red-300">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                  </button>
                </div>
              </div>
            `;
          });
        }
        
        if (cartTotal) {
          cartTotal.textContent = `₹${total.toFixed(2)}`;
        }
      }

      // Toggle cart modal
      function toggleCart() {
        const cartModal = document.getElementById('cart-modal');
        cartModal.classList.toggle('hidden');
        renderCart();
      }

      // Place order function
      function placeOrder() {
        if (cart.length === 0) {
          alert('Your cart is empty!');
          return;
        }

        const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        const tableNumber = <%= tableNum %>;
        
        fetch('/place/order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            cart: cart.map(item => ({
              product: item.productId,
              quantity: item.quantity
            })),
            total: total,
            tableNumber: tableNumber
          })
        })
        .then(res => res.json())
        .then(data => {
          alert(data.message || 'Order placed successfully!');
          cart = [];
          saveCart();
          updateCartBadge();
          toggleCart();
        })
        .catch(err => {
          alert('Order failed. Please try again.');
          console.error(err);
        });
      }



      // ---------- Modern Cart Functions ----------
    </script>

  </body>
</html>
